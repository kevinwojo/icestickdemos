$date
	Sun Feb 12 22:01:58 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module adder_tb $end
$var wire 4 ! Sum [3:0] $end
$var wire 1 " Cout $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % Cin $end
$scope module uut $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % Cin $end
$var wire 1 ( c3 $end
$var wire 1 ) c2 $end
$var wire 1 * c1 $end
$var wire 4 + Sum [3:0] $end
$var wire 1 " Cout $end
$scope module FA1 $end
$var wire 1 , A $end
$var wire 1 - B $end
$var wire 1 % Cin $end
$var wire 1 * Cout $end
$var wire 1 . s1 $end
$var wire 1 / c2 $end
$var wire 1 0 c1 $end
$var wire 1 1 S $end
$scope module HA1 $end
$var wire 1 , A $end
$var wire 1 - B $end
$var wire 1 0 C $end
$var wire 1 . S $end
$upscope $end
$scope module HA2 $end
$var wire 1 . A $end
$var wire 1 % B $end
$var wire 1 / C $end
$var wire 1 1 S $end
$upscope $end
$upscope $end
$scope module FA2 $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 * Cin $end
$var wire 1 ) Cout $end
$var wire 1 4 s1 $end
$var wire 1 5 c2 $end
$var wire 1 6 c1 $end
$var wire 1 7 S $end
$scope module HA1 $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 6 C $end
$var wire 1 4 S $end
$upscope $end
$scope module HA2 $end
$var wire 1 4 A $end
$var wire 1 * B $end
$var wire 1 5 C $end
$var wire 1 7 S $end
$upscope $end
$upscope $end
$scope module FA3 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 ) Cin $end
$var wire 1 ( Cout $end
$var wire 1 : s1 $end
$var wire 1 ; c2 $end
$var wire 1 < c1 $end
$var wire 1 = S $end
$scope module HA1 $end
$var wire 1 8 A $end
$var wire 1 9 B $end
$var wire 1 < C $end
$var wire 1 : S $end
$upscope $end
$scope module HA2 $end
$var wire 1 : A $end
$var wire 1 ) B $end
$var wire 1 ; C $end
$var wire 1 = S $end
$upscope $end
$upscope $end
$scope module FA4 $end
$var wire 1 > A $end
$var wire 1 ? B $end
$var wire 1 ( Cin $end
$var wire 1 " Cout $end
$var wire 1 @ s1 $end
$var wire 1 A c2 $end
$var wire 1 B c1 $end
$var wire 1 C S $end
$scope module HA1 $end
$var wire 1 > A $end
$var wire 1 ? B $end
$var wire 1 B C $end
$var wire 1 @ S $end
$upscope $end
$scope module HA2 $end
$var wire 1 @ A $end
$var wire 1 ( B $end
$var wire 1 A C $end
$var wire 1 C S $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
b0 +
0*
0)
0(
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#205
b10 !
b10 +
17
1*
10
1-
1,
b1 $
b1 '
b1 #
b1 &
#315
0=
0)
11
0*
b11 !
b11 +
17
05
1.
00
14
0,
12
b10 #
b10 &
#430
1=
1)
07
15
b100 !
b100 +
01
1*
0.
10
1,
b11 #
b11 &
#550
0C
0)
0(
11
0*
07
05
b101 !
b101 +
1=
0;
1.
00
04
1:
0,
02
18
b100 #
b100 &
#675
17
b1111 !
b1111 +
1C
14
1@
0-
1,
12
1>
b0 $
b0 '
b1111 #
b1111 &
#805
1"
0C
1A
1(
0=
1;
1)
07
15
b0 !
b0 +
01
1*
0.
10
1-
b1 $
b1 '
#940
17
05
1=
0;
04
16
0:
1<
b111 !
b111 +
11
13
19
1%
b111 $
b111 '
#1080
07
0=
0"
0*
0)
0(
0C
0A
00
06
0<
0@
b0 !
b0 +
01
0-
03
09
0,
02
08
0>
0%
b0 $
b0 '
b0 #
b0 &
